<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Singleton Table on BC AL Help</title><link>https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/</link><description>Recent content in Singleton Table on BC AL Help</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/index.xml" rel="self" type="application/rss+xml"/><item><title>Cue Table</title><link>https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/cue-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/cue-table/</guid><description>Cue Table _By Bogdana Botez at Microsoft Development Center Copenhagen
_
_
_
Cues are the second usual application of the Singleton Table pattern in Dynamics NAV, after Setup Tables.
Context: The user gets overview information about the business on the Dynamics NAV Role Center page.
Figure 1 - Cue information in Dynamics NAV shows cue information seen by the user on the Sales Order Processor role center.
The overview information consists of summed-up numbers, calculated from business data, like for example how many sales orders are still open, how many shipments are ready to go, or partially shipped, how many documents are waiting for approval etc.</description></item><item><title>Setup Table</title><link>https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/setup-table/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://bc-design-patterns.github.io/AL-Dev-Help/navpatterns/1-patterns/singleton/singleton-table/setup-table/</guid><description>Setup Table By Abhishek Ghosh, at Microsoft Development Center Copenhagen
This is the first and most well-known of the two usual applications of the Singleton Table pattern in Dynamics NAV.
Problem: the developer needs to store information about the operating setup or environment in the database, in a way that can be persisted across sessions.
Solution: The information is stored in a table with one record only. The user is subsequently able to modify, but not add or delete records in the table.</description></item></channel></rss>